#+TITLE: Puppet Client Install
#+DATE: <2016-03-24 Tue>
#+AUTHOR: Richard Longland
#+EMAIL: longland@X1Carbon
#+OPTIONS: ':nil *:t -:t ::t <:t H:2 \n:nil ^:t arch:headline
#+OPTIONS: author:nil c:nil creator:comment d:nil date:t e:t email:nil
#+OPTIONS: f:t inline:t num:t p:nil pri:nil stat:t tags:not-in-toc
#+OPTIONS: tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.3.1 (Org mode 8.2.4)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+LATEX_HEADER: \usepackage{fullpage}
#+LATEX_HEADER: \usepackage{times}

* Install notes
  This assumes you have a clean install of Linux Mint (I'm using 17.3 KDE)

** Preparation
   + Install a few things
     #+BEGIN_SRC sh
sudo apt-get install ssh emacs build-essential libreadline-dev \
                     mesa-common-dev libgl1-mesa-dev python-dev
     #+END_SRC

** EPICS Base
   + Boot into Mint
   + Log in as user
   + Make a new user: enge, if you don't have it
     #+BEGIN_SRC sh
     sudo adduser --home /home/enge enge
     #+END_SRC
   + Add that user to the sudoers list
     #+BEGIN_SRC sh
     sudo adduser enge sudo
     #+END_SRC
   + Log out and then in as that user
   + Make the file structure (I actually put these in a separate
     partition and linked to them from here)
     #+BEGIN_SRC sh
mkdir bin
mkdir project
mkdir GUI
     #+END_SRC
   + Download and untar the EPICS base package
     #+BEGIN_SRC sh
wget http://www.aps.anl.gov/epics/download/base/base-3.15.2.tar.gz 
tar -xzvf base-3.15.2.tar.gz
ln -s base-3.15.2 base
     #+END_SRC
   + Paste the following into .bashrc
     #+BEGIN_SRC 
######################################################################
##  EPICS
######################################################################

## Base
export EPICS_ROOT=/home/enge
export EPICS_BASE=${EPICS_ROOT}/base/
export EPICS_HOST_ARCH=`${EPICS_BASE}/startup/EpicsHostArch`
export EPICS_BASE_BIN=${EPICS_BASE}/bin/${EPICS_HOST_ARCH}
export EPICS_BASE_LIB=${EPICS_BASE}/lib/${EPICS_HOST_ARCH}
if [ "" = "${LD_LIBRARY_PATH}" ]; then
    export LD_LIBRARY_PATH=${EPICS_BASE_LIB}
else
    export LD_LIBRARY_PATH=${EPICS_BASE_LIB}:${LD_LIBRARY_PATH}
fi
export PATH=${PATH}:${EPICS_BASE_BIN}

## EPICS Extensions
export EPICS_EXT=${EPICS_ROOT}/extensions
export EPICS_EXT_BIN=${EPICS_EXT}/bin/${EPICS_HOST_ARCH}
export EPICS_EXT_LIB=${EPICS_EXT}/lib/${EPICS_HOST_ARCH}
if [ "" = "${LD_LIBRARY_PATH}" ]; then
    export LD_LIBRARY_PATH=${EPICS_EXT_LIB}
else
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${EPICS_BASE_LIB}
fi
export EPICS_SYNAPPS_BASE=${EPICS_ROOT}/synApps
export EPICS_SYNAPPS_BIN=${EPICS_SYNAPPS_BASE}/support/utils
export PATH=${PATH}:${EPICS_EXT_BIN}:${EPICS_SYNAPPS_BIN}
     #+END_SRC
   + Load it
     #+BEGIN_SRC sh
source ~/.bashrc
     #+END_SRC
   + Compile EPICS
     #+BEGIN_SRC sh
cd base
make -j2     
     #+END_SRC
   + Buy and drink some coffee
   + Once finished, check that it works
     #+BEGIN_SRC sh
softIoc     
     #+END_SRC
   + Epics should have started. Now run the IOC
     #+BEGIN_SRC sh
iocInit     
     #+END_SRC
   + You should see something that looks like
     #+BEGIN_SRC sh
epics> iocInit  
Starting iocInit
############################################################################
## EPICS R3.15.2 $Date: Thu 2015-05-14 14:09:28 +0200$
## EPICS Base built Jul 17 2015
############################################################################
iocRun: All initialization complete
epics> exit     
     #+END_SRC

** synApps (needed for streamdevice and serial connections)
   + Get the extensions and msi first
     #+BEGIN_SRC sh
cd ~
wget http://www.aps.anl.gov/epics/download/extensions/extensionsTop_20120904.tar.gz
tar -xzvf extensionsTop_20120904.tar.gz
wget http://www.aps.anl.gov/epics/download/extensions/msi1-7.tar.gz
cd extensions/src
tar -xzvf ../../msi1-7.tar.gz
cd msi1-7
make
     #+END_SRC
   + Install re2c (I don't know what it's for)
     #+BEGIN_SRC sh
sudo apt-get install re2c     
     #+END_SRC
   + Download and unzip synApps
     #+BEGIN_SRC sh
cd ~
wget http://www.aps.anl.gov/bcda/synApps/tar/synApps_5_8.tar.gz
tar -xzvf synApps_5_8.tar.gz
ln -s synApps_5_8 synApps
     #+END_SRC
   + We don't need all the junk included
     #+BEGIN_SRC sh
cd synApps/support/configure
emacs RELEASE     
     #+END_SRC
   + Edit the SUPPORT line
     #+BEGIN_SRC sh
SUPPORT=/home/enge/synApps/support
     #+END_SRC
   + Edit EPICS_BASE
     #+BEGIN_SRC sh
EPICS_BASE=/home/enge/base
     #+END_SRC
   + Comment out (with a '~#~') the modules we don't want
     - ~ALLEN_BRADLEY~
     - ~AREA_DETECTOR~
     - ~ADCORE~
     - ~ADBINARIES~
     - ~CAPUTRECORDER~
     - ~CAMAC~
     - ~DAC128V~
     - ~DXP~
     - ~IP330~
     - ~IPUNIDIG~
     - ~OPTICS~
     - ~QUADEM~
     - ~SOFTGLUE~
     - ~VME~
   + Prepare the makefile
     #+BEGIN_SRC sh
cd ~/synApps/support
make release     
     #+END_SRC
   + Compile!
     #+BEGIN_SRC sh
make -j2 rebuild     
     #+END_SRC

** Tidy up
   + Make a folder to keep zip files
     #+BEGIN_SRC sh
cd ~
mkdir Downloads
mv *.tar.gz Downloads
     #+END_SRC
     
** Qt GUI stuff
   I've quite liked using Qt as a GUI. So far, [[www.epicsqt.org][EpicsQt]] has worked
   quite nicely, but I haven't tried to do anything complicated
   yet. In the mean time, we should also install [[http://epics.web.psi.ch/software/caqtdm/][CaQtDM]].

*** Qt Install
    + Download Qt (includes Qt Creator) from the [[http://www.qt.io/][official website]]
    + Make sure you look for the open source one
    + This should have saved a file
      ~qt-unified-linux-x64-2.0.2-1-online.run~ in my case.
    + Make a folder to put this in
      #+BEGIN_SRC sh
sudo mkdir /opt/Qt      
      #+END_SRC
    + Install Qt in the folder you just made
      #+BEGIN_SRC sh
chmod 755 qt-unified-linux-x64-2.0.2-1-online.run
./qt-unified-linux-x64-2.0.2-1-online.run
      #+END_SRC
    + This should install Qt. Check
      #+BEGIN_SRC sh
qtcreator &
      #+END_SRC
    + Now add the following in .bashrc
      #+BEGIN_SRC sh
#### Qt
export PATH=/opt/Qt/5.5/gcc_64/bin:/opt/Qt/Tools/QtCreator/bin:${PATH}
export QWT_ROOT=/usr/local/qwt-6.1.2
export QWT_INCLUDE_PATH=/usr/local/qwt-6.1.2/include/
export LD_LIBRARY_PATH=/usr/local/qwt-6.1.2/lib/:/opt/Qt/5.5/gcc_64/lib:${LD_LIBRARY_PATH}
      #+END_SRC
    + Also install QWT
    + Download from http://qwt.sourceforge.net/
      #+BEGIN_SRC sh
source ~/.bashrc
cd ~/Downloads
tar -xjvf qwt-6.1.2.tar.bz2
cd qwt-6.1.2
qmake
make
sudo make install
      #+END_SRC

*** CaQtDM Install
    + https://github.com/caqtdm/caqtdm/archive/V3.9.4.tar.gz
    + Download:
      #+BEGIN_SRC sh
cd ~/GUI
wget https://github.com/caqtdm/caqtdm/archive/V3.9.4.tar.gz
tar -xzvf V3.9.4.tar.gz
mv V3.9.4.tar.gz ~/Downloads/caQtDM_V3.9.4.tar.gz
      #+END_SRC
    + caQtDM doesn't find variables on its own, so make sure
      ~caQtDM_Env~ has the right variables
      #+BEGIN_SRC sh
if [ -z "$QTHOME" ];           then export   QTHOME=/opt/Qt;
fi
if [ -z "$QWTHOME" ];          then export   QWTHOME=/usr/local/qwt-6.1.2;
fi
if [ -z "$QWTINCLUDE" ];       then export   QWTINCLUDE=${QWTHOME}/include;
fi
if [ -z "$QWTLIB" ];           then export   QWTLIB=${QWTHOME}/lib;
fi
if [ -z "$EPICS_BASE" ];       then export   EPICS_BASE=/home/enge/base;
fi
if [ -z "$EPICSINCLUDE" ];     then export   EPICSINCLUDE=${EPICS_BASE}/include;
fi
if [ -z "$EPICSLIB" ];         then  export  EPICSLIB=${EPICS_BASE}/lib/$EPICS_HOST_ARCH;
fi
if [ -z "$EPICSEXTENSIONS" ];  then  export  EPICSEXTENSIONS=/home/enge/extensions;
fi
if [ -z "$QTCONTROLS_LIBS" ];  then export  QTCONTROLS_LIBS=`pwd`/caQtDM_Binaries;
fi
if [ -z "$CAQTDM_COLLECT" ];  then export  CAQTDM_COLLECT=`pwd`/caQtDM_Binaries;
fi
      #+END_SRC
    + Make sure python is defined as the correct version (I had to put
      2.7) in ~caQtDM_Env~
    + Fix compilerSpecific.h
      #+BEGIN_SRC sh
ln -s /home/enge/base/include/compiler/gcc/compilerSpecific.h /home/enge/base/include/
      #+END_SRC
    + Run the build script
      #+BEGIN_SRC sh
./caQtDM_BuildAll
      #+END_SRC

*** EpicsQt Install
    + Download from [[*Qt%20GUI%20stuff][www.sourceforge.net/project/epicsqt]] (I got version 3.1.0)
    + Extract
      #+BEGIN_SRC sh
mv epicsqt-3.1.0-src.tar.gz ~/GUI
cd ~/GUI
tar -xzvf epicsqt-3.1.0-src.tar.gz
mv 3.1.0 EpicsQt-3.1.0
      #+END_SRC
    + Add some things to ~.bashrc~
      #+BEGIN_SRC sh
## QtEpics
export QE_EPICS_BASE=${EPICS_BASE}
export EPICSQT_ROOT=${EPICS_ROOT}/GUI/EpicsQt-3.1.0
export EPICSCAQTDM_ROOT=${EPICS_ROOT}/GUI/caqtdm-3.9.4
export PATH=${PATH}:${EPICSQT_ROOT}/applications/QEGuiApp/bin:${EPICSCAQTDM_ROOT}/caQtDM_Binaries
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${EPICSQT_ROOT}/framework/designer:${EPICS_BASE}/lib/${EPICS}
export QT_PLUGIN_PATH=${EPICSQT_ROOT}/framework:${EPICSCAQTDM_ROOT}/caQtDM_Binaries
      #+END_SRC
    + and source: ~source ~/.bashrc~
    + For some reason, I found it easiest to do the rest of this
      compilation using Qt Creator. So load that now
      #+BEGIN_SRC sh
qtcreator &      
      #+END_SRC
    + Make sure the correct version of Qt is being used. On a fresh
      install this should be easy enough, but you'll need to be
      careful if there are multiple versions of Qt on your computer.
    + Load the ~epicsqt.pro~ file in the EpicsQt base directory
    + Uncheck "shadow build" in "Projects"
    + Add multi-processor building if you like by adding '-j2' to the
      make arguments
    + Hit the "build" button!\\
      There will be lots of warnings but eventually it will
      finish. Hopefully without any errors...
    + Close and reopen Qt Creator (from the command line)
    + Open a test GUI and make sure it works
      + Open a form
      + Tools -> Form Editor -> About Qt Designer Plugins
      + Scroll down to make sure the EpicsQt plugins are loaded

